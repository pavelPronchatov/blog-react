[{"C:\\Users\\asda_\\Desktop\\react-test\\src\\index.js":"1","C:\\Users\\asda_\\Desktop\\react-test\\src\\reportWebVitals.js":"2","C:\\Users\\asda_\\Desktop\\react-test\\src\\api\\api.js":"3","C:\\Users\\asda_\\Desktop\\react-test\\src\\functions.js":"4","C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\reducer\\editReducer.ts":"5","C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\actions\\actions.ts":"6","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\PostItem\\PostItem.tsx":"7","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\ModalExit\\ModalExit.tsx":"8","C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\store.ts":"9","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\EditBtn\\EditBtn.tsx":"10","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\Header\\Header.tsx":"11","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\ModalAddPost\\ModalAddPost.tsx":"12","C:\\Users\\asda_\\Desktop\\react-test\\src\\App.tsx":"13","C:\\Users\\asda_\\Desktop\\react-test\\src\\pages\\PostDetail\\PostDetail.tsx":"14","C:\\Users\\asda_\\Desktop\\react-test\\src\\pages\\MainPage.tsx":"15","C:\\Users\\asda_\\Desktop\\react-test\\src\\pages\\EditPage.tsx":"16","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\PostList\\PostList.tsx":"17","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\Pagination\\Pagination.tsx":"18","C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\actions\\types.js":"19","C:\\Users\\asda_\\Desktop\\blog-react\\src\\index.js":"20","C:\\Users\\asda_\\Desktop\\blog-react\\src\\App.tsx":"21","C:\\Users\\asda_\\Desktop\\blog-react\\src\\redux\\store.ts":"22","C:\\Users\\asda_\\Desktop\\blog-react\\src\\reportWebVitals.js":"23","C:\\Users\\asda_\\Desktop\\blog-react\\src\\redux\\actions\\actions.ts":"24","C:\\Users\\asda_\\Desktop\\blog-react\\src\\redux\\reducer\\editReducer.ts":"25","C:\\Users\\asda_\\Desktop\\blog-react\\src\\pages\\EditPage.tsx":"26","C:\\Users\\asda_\\Desktop\\blog-react\\src\\pages\\MainPage.tsx":"27","C:\\Users\\asda_\\Desktop\\blog-react\\src\\pages\\PostDetail\\PostDetail.tsx":"28","C:\\Users\\asda_\\Desktop\\blog-react\\src\\components\\Header\\Header.tsx":"29","C:\\Users\\asda_\\Desktop\\blog-react\\src\\redux\\actions\\types.js":"30","C:\\Users\\asda_\\Desktop\\blog-react\\src\\functions.js":"31","C:\\Users\\asda_\\Desktop\\blog-react\\src\\components\\Pagination\\Pagination.tsx":"32","C:\\Users\\asda_\\Desktop\\blog-react\\src\\components\\ModalExit\\ModalExit.tsx":"33","C:\\Users\\asda_\\Desktop\\blog-react\\src\\components\\ModalAddPost\\ModalAddPost.tsx":"34","C:\\Users\\asda_\\Desktop\\blog-react\\src\\components\\PostList\\PostList.tsx":"35","C:\\Users\\asda_\\Desktop\\blog-react\\src\\components\\EditBtn\\EditBtn.tsx":"36","C:\\Users\\asda_\\Desktop\\blog-react\\src\\components\\PostItem\\PostItem.tsx":"37","C:\\Users\\asda_\\Desktop\\blog-react\\src\\api\\api.ts":"38"},{"size":508,"mtime":1614546636791,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"40"},{"size":297,"mtime":1607285522873,"results":"42","hashOfConfig":"40"},{"size":325,"mtime":1610218034704,"results":"43","hashOfConfig":"40"},{"size":4221,"mtime":1614546793212,"results":"44","hashOfConfig":"40"},{"size":2913,"mtime":1614546720427,"results":"45","hashOfConfig":"40"},{"size":2314,"mtime":1614546974282,"results":"46","hashOfConfig":"40"},{"size":1258,"mtime":1614530891279,"results":"47","hashOfConfig":"40"},{"size":523,"mtime":1614532723115,"results":"48","hashOfConfig":"40"},{"size":483,"mtime":1614534732644,"results":"49","hashOfConfig":"40"},{"size":2754,"mtime":1610218500053,"results":"50","hashOfConfig":"40"},{"size":3657,"mtime":1614535042830,"results":"51","hashOfConfig":"40"},{"size":825,"mtime":1614543890586,"results":"52","hashOfConfig":"40"},{"size":1329,"mtime":1614541748888,"results":"53","hashOfConfig":"40"},{"size":353,"mtime":1614541623301,"results":"54","hashOfConfig":"40"},{"size":1457,"mtime":1614541623270,"results":"55","hashOfConfig":"40"},{"size":553,"mtime":1614546845063,"results":"56","hashOfConfig":"40"},{"size":1672,"mtime":1614537561576,"results":"57","hashOfConfig":"40"},{"size":542,"mtime":1610302487792,"results":"58","hashOfConfig":"40"},{"size":529,"mtime":1616866525841,"results":"59","hashOfConfig":"60"},{"size":857,"mtime":1616866525813,"results":"61","hashOfConfig":"60"},{"size":523,"mtime":1616866525849,"results":"62","hashOfConfig":"60"},{"size":375,"mtime":1616866525850,"results":"63","hashOfConfig":"60"},{"size":2843,"mtime":1616870262304,"results":"64","hashOfConfig":"60"},{"size":4221,"mtime":1616866525849,"results":"65","hashOfConfig":"60"},{"size":1457,"mtime":1616866525843,"results":"66","hashOfConfig":"60"},{"size":353,"mtime":1616866525844,"results":"67","hashOfConfig":"60"},{"size":1397,"mtime":1616868144751,"results":"68","hashOfConfig":"60"},{"size":2754,"mtime":1616866525821,"results":"69","hashOfConfig":"60"},{"size":542,"mtime":1616866525848,"results":"70","hashOfConfig":"60"},{"size":325,"mtime":1616866525840,"results":"71","hashOfConfig":"60"},{"size":1672,"mtime":1616866525835,"results":"72","hashOfConfig":"60"},{"size":1258,"mtime":1616866525832,"results":"73","hashOfConfig":"60"},{"size":3669,"mtime":1616869823517,"results":"74","hashOfConfig":"60"},{"size":553,"mtime":1616866525839,"results":"75","hashOfConfig":"60"},{"size":483,"mtime":1616866525819,"results":"76","hashOfConfig":"60"},{"size":2314,"mtime":1616866525837,"results":"77","hashOfConfig":"60"},{"size":409,"mtime":1616867601946,"results":"78","hashOfConfig":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u54tnw",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"xha4gh",{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"126"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"126"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"126"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\asda_\\Desktop\\react-test\\src\\index.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\reportWebVitals.js",[],["164","165"],"C:\\Users\\asda_\\Desktop\\react-test\\src\\api\\api.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\functions.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\reducer\\editReducer.ts",["166","167"],"C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\actions\\actions.ts",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\PostItem\\PostItem.tsx",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\ModalExit\\ModalExit.tsx",[],["168","169"],"C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\store.ts",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\EditBtn\\EditBtn.tsx",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\ModalAddPost\\ModalAddPost.tsx",["170"],"import React, {useEffect} from 'react';\r\n\r\n\r\nimport style from \"./ModalAddPost.module.scss\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addPost, editPost, setIsEditPost, setModalPostAdd} from \"../../redux/actions/actions\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {PostType} from \"../../types/types\";\r\n\r\nconst ModalAddPost = () => {\r\n  //redux\r\n  const dispatch = useDispatch();\r\n  const isOpenModal = useSelector((state: AppStateType) => state.editReducer.isModalAddPost);\r\n  const isEditPost = useSelector((state: AppStateType) => state.editReducer.isEditPost);\r\n  const editPostItem = useSelector((state: AppStateType) => state.editReducer.editPost);\r\n\r\n  const {register, handleSubmit, reset, errors, setValue} = useForm({\r\n    defaultValues: {\r\n      title: '',\r\n      imgLink: '',\r\n      text: '',\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isOpenModal) {\r\n      document.body.style.overflow = 'hidden';\r\n      window.scrollTo({\r\n        top: 0,\r\n        behavior: \"smooth\",\r\n      })\r\n    } else {\r\n      document.body.style.overflow = '';\r\n    }\r\n  }, [isOpenModal]);\r\n\r\n  useEffect(() => {\r\n    if (isEditPost) {\r\n      setValue('title', editPostItem.title);\r\n      setValue('imgLink', editPostItem.imgLink);\r\n      setValue('text', editPostItem.text);\r\n    } else reset();\r\n  }, [editPostItem, isEditPost]);\r\n\r\n\r\n  const onSubmit = (data: PostType) => {\r\n    if (isEditPost) {\r\n      dispatch(editPost(editPostItem.id, data));\r\n      dispatch(setIsEditPost(false));\r\n    } else {\r\n      dispatch(addPost(data));\r\n    }\r\n    console.log(data);\r\n    reset();\r\n  }\r\n\r\n  return (\r\n    <div className={`${style.modal} ${isOpenModal ? style.active : ''}`}>\r\n      <Link to=\"/\" className={style.title}>Blog</Link>\r\n      <form\r\n        className={style.form}\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <div className={style.btns}>\r\n          <button\r\n            type=\"button\"\r\n            className={`${style.btn} ${style.btnBack}`}\r\n            onClick={() => {\r\n              dispatch(setModalPostAdd(false));\r\n              dispatch(setIsEditPost(false));\r\n\r\n            }}\r\n          />\r\n          {\r\n            isEditPost ? (\r\n              <button\r\n                type=\"submit\"\r\n                className={style.btn}\r\n                onClick={() => dispatch(setModalPostAdd(false))}\r\n              >Изменить\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"submit\"\r\n                className={style.btn}\r\n                onClick={() => dispatch(setModalPostAdd(false))}\r\n              >Опубликовать\r\n              </button>\r\n            )\r\n          }\r\n\r\n        </div>\r\n\r\n        <input\r\n          type=\"text\"\r\n          className={`${style.inputTitle} ${errors.title?.type === 'required' ? style.error : ''}`}\r\n          placeholder=\"Заголовок\"\r\n          name=\"title\"\r\n          ref={register({required: true})}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className={`${style.inputTitle} ${errors.imgLink?.type === 'required' ? style.error : ''}`}\r\n          placeholder=\"Ссылка на картинку\"\r\n          name=\"imgLink\"\r\n          ref={register({required: true})}\r\n        />\r\n        <textarea\r\n          className={`${style.inputText} ${errors.text?.type === 'required' ? style.error : ''}`}\r\n          placeholder=\"Основной текст .....\"\r\n          name=\"text\"\r\n          ref={register({required: true})}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalAddPost;","C:\\Users\\asda_\\Desktop\\react-test\\src\\App.tsx",["171"],"C:\\Users\\asda_\\Desktop\\react-test\\src\\pages\\PostDetail\\PostDetail.tsx",["172"],"C:\\Users\\asda_\\Desktop\\react-test\\src\\pages\\MainPage.tsx",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\pages\\EditPage.tsx",["173"],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\PostList\\PostList.tsx",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\Pagination\\Pagination.tsx",["174"],"C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\actions\\types.js",[],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\index.js",[],["175","176"],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\App.tsx",["177"],"import './App.scss';\r\nimport Header from \"./components/Header/Header\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setPosts} from \"./redux/actions/actions\";\r\nimport {Route} from \"react-router-dom\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport EditPage from \"./pages/EditPage\";\r\nimport PostDetail from \"./pages/PostDetail/PostDetail\";\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setPosts());\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <Header/>\r\n        <Route exact path={'/'} component={MainPage}/>\r\n        <Route exact path={'/edit-page'} component={EditPage}/>\r\n        <Route exact path={'/post-item/:postId'} component={PostDetail}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["178","179"],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\redux\\store.ts",[],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\reportWebVitals.js",[],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\redux\\actions\\actions.ts",[],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\redux\\reducer\\editReducer.ts",["180","181"],"import {\r\n    ADD_POST, CHANGE_CURRENT_PAGE,\r\n    DELETE_ITEM,\r\n    DETAIL_POST,\r\n    EDIT_POST,\r\n    EXIT_EDIT,\r\n    IS_EDIT,\r\n    IS_EDIT_POST,\r\n    IS_MODAL_POST_ADD,\r\n    SELECT_EDIT_POST,\r\n    SET_POST, SET_POSTS_PER_PAGE\r\n} from \"../actions/types\";\r\nimport {formatedDate} from \"../../functions\";\r\nimport {PostType} from \"../../types/types\";\r\nimport {\r\n  AddPostType,\r\n  ChangeCurrentPageType,\r\n  ChangePostsPerPageType,\r\n  DeletePostType, EditPostType,\r\n  ExitEditModeType, SelectEditPostType, SetDetailPostType, SetEditModeType, SetIsEditPostType, SetModalPostAddType,\r\n  SetPostACType\r\n} from \"../actions/actions\";\r\n\r\n\r\nconst initialState = {\r\n    editMode: false as boolean,\r\n    posts: [] as Array<PostType>,\r\n    date: new Date() as Date,\r\n    editPost: {} as PostType,\r\n    isModalAddPost: false as boolean,\r\n    isEditPost: false as boolean,\r\n    postDetailItem: {} as PostType,\r\n    currentPage: 1 as number,\r\n    postsPerPage: [] as Array<PostType>,\r\n}\r\n\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nexport type ActionsTypes =\r\n    SetPostACType\r\n    | ChangePostsPerPageType\r\n    | ExitEditModeType\r\n    | DeletePostType\r\n    | AddPostType\r\n    | SetEditModeType\r\n    | SelectEditPostType\r\n    | SetModalPostAddType\r\n    | SetIsEditPostType\r\n    | EditPostType\r\n    | SetDetailPostType\r\n    | ChangeCurrentPageType;\r\n\r\nexport const editReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, ...action.posts],\r\n            }\r\n\r\n        case IS_EDIT:\r\n            return {\r\n                ...state,\r\n                editMode: true,\r\n            }\r\n\r\n        case EXIT_EDIT:\r\n            return {\r\n                ...state,\r\n                editMode: false,\r\n            }\r\n\r\n        case DELETE_ITEM:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(item => item.id !== action.postId),\r\n            }\r\n\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [\r\n                    ...state.posts,\r\n                    {\r\n                        ...action.postItem,\r\n                        id: Date.now(),\r\n                        readable: false,\r\n                        date: formatedDate(state.date),\r\n                    }\r\n                ]\r\n            }\r\n\r\n        case SELECT_EDIT_POST:\r\n            return {\r\n                ...state,\r\n                editPost: state.posts.filter(el => {\r\n                    if (el.id === action.postId) {\r\n                        return el;\r\n                    }\r\n                })[0]\r\n            }\r\n\r\n        case EDIT_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts.map(el => {\r\n                    if (el.id === action.postId) {\r\n                        return {\r\n                            ...el,\r\n                            date: formatedDate(state.date),\r\n                            ...action.postItem,\r\n                        }\r\n                    } else {\r\n                        return el;\r\n                    }\r\n                })]\r\n            }\r\n\r\n        case IS_MODAL_POST_ADD:\r\n            return {\r\n                ...state,\r\n                isModalAddPost: action.isOpen,\r\n            }\r\n\r\n        case IS_EDIT_POST:\r\n            return {\r\n                ...state,\r\n                isEditPost: action.isEditPost,\r\n            }\r\n\r\n        case DETAIL_POST:\r\n            return {\r\n                ...state,\r\n                postDetailItem: state.posts.filter(el => {\r\n                    if (el.id === action.postId) {\r\n                        return el;\r\n                    }\r\n                })[0]\r\n            }\r\n\r\n        case CHANGE_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page,\r\n            }\r\n\r\n        case SET_POSTS_PER_PAGE:\r\n            return {\r\n                ...state,\r\n                postsPerPage: [...state.posts.slice(((state.currentPage * 5) - 5), state.currentPage * 5)]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\asda_\\Desktop\\blog-react\\src\\pages\\EditPage.tsx",["182"],"import React, {useEffect, useState} from 'react';\r\nimport PostList from \"../components/PostList/PostList\";\r\nimport Pagination from \"../components/Pagination/Pagination\";\r\n\r\nimport styles from \"../components/EditPage/EditPage.module.scss\";\r\nimport {setEditMode, setModalPostAdd} from \"../redux/actions/actions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport ModalExit from \"../components/ModalExit/ModalExit\";\r\nimport ModalAddPost from \"../components/ModalAddPost/ModalAddPost\";\r\n\r\n\r\ntype PropsType = {\r\n    match: any\r\n}\r\n\r\nconst EditPage: React.FC<PropsType> = ({match}) => {\r\n  //state\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (match.path === '/edit-page') {\r\n      dispatch(setEditMode())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.btnWrapper}>\r\n        <button\r\n          className=\"add-post edit-btn\"\r\n          onClick={() => dispatch(setModalPostAdd(true))}\r\n        >\r\n          Добавить статью\r\n        </button>\r\n\r\n        <button\r\n          className=\"exit-post edit-btn\"\r\n          onClick={() => setIsOpenModal(true)}\r\n        >\r\n          Выйти из редактирования\r\n        </button>\r\n      </div>\r\n\r\n\r\n      <PostList/>\r\n      <Pagination/>\r\n\r\n      <ModalExit isOpenModal={isOpenModal} setIsOpenModal={setIsOpenModal}/>\r\n      <ModalAddPost/>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPage;","C:\\Users\\asda_\\Desktop\\blog-react\\src\\pages\\MainPage.tsx",[],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\pages\\PostDetail\\PostDetail.tsx",["183"],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\redux\\actions\\types.js",[],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\functions.js",[],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\components\\Pagination\\Pagination.tsx",["184"],"import React, {useEffect} from 'react';\r\n\r\nimport style from \"./Pagination.module.scss\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeCurrentPage, changePostsPerPage} from \"../../redux/actions/actions\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\n\r\nconst Pagination = () => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state: AppStateType) => state.editReducer.posts);\r\n  const currentPage = useSelector((state: AppStateType) => state.editReducer.currentPage);\r\n  const pages: Array<number> = [];\r\n\r\n  useEffect(() => {\r\n    if (posts.length > 0) {\r\n      dispatch(changePostsPerPage());\r\n    }\r\n  }, [posts, currentPage]);\r\n\r\n  for (let i = 1; i <= Math.ceil(posts.length / 5); i++) {\r\n    pages.push(i);\r\n  }\r\n  console.log(pages);\r\n\r\n  return (\r\n    <div  className={style.pagination}>\r\n      <button\r\n        className={style.paginationBtn}\r\n        onClick={() => {\r\n          if (currentPage > 1) {\r\n            dispatch(changeCurrentPage( currentPage - 1));\r\n          }\r\n        }}\r\n      >prev</button>\r\n      {\r\n        pages.map(el => (\r\n          <button\r\n            key={el}\r\n            className={style.paginationBtn}\r\n            onClick={() => {\r\n              dispatch(changeCurrentPage(+el));\r\n              dispatch(changePostsPerPage());\r\n            }}\r\n          >{el}</button>\r\n        ))\r\n      }\r\n      <button\r\n        className={style.paginationBtn}\r\n        onClick={() => {\r\n          if (currentPage < pages[pages.length - 1]) {\r\n            dispatch(changeCurrentPage(currentPage + 1));\r\n          }\r\n        }}\r\n      >next</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","C:\\Users\\asda_\\Desktop\\blog-react\\src\\components\\ModalExit\\ModalExit.tsx",[],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\components\\ModalAddPost\\ModalAddPost.tsx",["185"],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\components\\PostList\\PostList.tsx",[],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\components\\EditBtn\\EditBtn.tsx",[],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\components\\PostItem\\PostItem.tsx",[],"C:\\Users\\asda_\\Desktop\\blog-react\\src\\api\\api.ts",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":97,"column":49,"nodeType":"192","messageId":"193","endLine":97,"endColumn":51},{"ruleId":"190","severity":1,"message":"191","line":135,"column":55,"nodeType":"192","messageId":"193","endLine":135,"endColumn":57},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"194","severity":1,"message":"195","line":45,"column":6,"nodeType":"196","endLine":45,"endColumn":32,"suggestions":"197"},{"ruleId":"194","severity":1,"message":"198","line":17,"column":6,"nodeType":"196","endLine":17,"endColumn":8,"suggestions":"199"},{"ruleId":"194","severity":1,"message":"200","line":24,"column":6,"nodeType":"196","endLine":24,"endColumn":13,"suggestions":"201"},{"ruleId":"194","severity":1,"message":"202","line":27,"column":6,"nodeType":"196","endLine":27,"endColumn":8,"suggestions":"203"},{"ruleId":"194","severity":1,"message":"198","line":19,"column":6,"nodeType":"196","endLine":19,"endColumn":26,"suggestions":"204"},{"ruleId":"186","replacedBy":"205"},{"ruleId":"188","replacedBy":"206"},{"ruleId":"194","severity":1,"message":"198","line":17,"column":6,"nodeType":"196","endLine":17,"endColumn":8,"suggestions":"207"},{"ruleId":"186","replacedBy":"205"},{"ruleId":"188","replacedBy":"206"},{"ruleId":"190","severity":1,"message":"191","line":97,"column":49,"nodeType":"192","messageId":"193","endLine":97,"endColumn":51},{"ruleId":"190","severity":1,"message":"191","line":135,"column":55,"nodeType":"192","messageId":"193","endLine":135,"endColumn":57},{"ruleId":"194","severity":1,"message":"202","line":27,"column":6,"nodeType":"196","endLine":27,"endColumn":8,"suggestions":"208"},{"ruleId":"194","severity":1,"message":"200","line":28,"column":6,"nodeType":"196","endLine":28,"endColumn":13,"suggestions":"209"},{"ruleId":"194","severity":1,"message":"198","line":19,"column":6,"nodeType":"196","endLine":19,"endColumn":26,"suggestions":"210"},{"ruleId":"194","severity":1,"message":"195","line":47,"column":6,"nodeType":"196","endLine":47,"endColumn":32,"suggestions":"211"},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'reset' and 'setValue'. Either include them or remove the dependency array.","ArrayExpression",["214"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.postId'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has missing dependencies: 'dispatch' and 'match.path'. Either include them or remove the dependency array.",["217"],["218"],["212"],["213"],["219"],["220"],["221"],["222"],["223"],"no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"226","fix":"234"},{"desc":"230","fix":"235"},{"desc":"228","fix":"236"},{"desc":"232","fix":"237"},{"desc":"224","fix":"238"},"Update the dependencies array to be: [editPostItem, isEditPost, reset, setValue]",{"range":"239","text":"240"},"Update the dependencies array to be: [dispatch]",{"range":"241","text":"242"},"Update the dependencies array to be: [dispatch, match.params.postId, posts]",{"range":"243","text":"244"},"Update the dependencies array to be: [dispatch, match.path]",{"range":"245","text":"246"},"Update the dependencies array to be: [posts, currentPage, dispatch]",{"range":"247","text":"248"},{"range":"249","text":"242"},{"range":"250","text":"246"},{"range":"251","text":"244"},{"range":"252","text":"248"},{"range":"253","text":"240"},[1411,1437],"[editPostItem, isEditPost, reset, setValue]",[484,486],"[dispatch]",[808,815],"[dispatch, match.params.postId, posts]",[796,798],"[dispatch, match.path]",[655,675],"[posts, currentPage, dispatch]",[500,502],[796,798],[876,883],[655,675],[1423,1449]]