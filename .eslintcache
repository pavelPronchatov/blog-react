[{"C:\\Users\\asda_\\Desktop\\react-test\\src\\index.js":"1","C:\\Users\\asda_\\Desktop\\react-test\\src\\App.js":"2","C:\\Users\\asda_\\Desktop\\react-test\\src\\reportWebVitals.js":"3","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\Header\\Header.js":"4","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\EditBtn\\EditBtn.js":"5","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\PostList\\PostList.js":"6","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\PostItem\\PostItem.js":"7","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\Pagination\\Pagination.js":"8","C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\store.js":"9","C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\reducer\\editReducer.js":"10","C:\\Users\\asda_\\Desktop\\react-test\\src\\api\\api.js":"11","C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\actions\\types.js":"12","C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\actions\\actions.js":"13","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\Loader\\Loader.js":"14","C:\\Users\\asda_\\Desktop\\react-test\\src\\pages\\EditPage.js":"15","C:\\Users\\asda_\\Desktop\\react-test\\src\\pages\\MainPage.js":"16","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\ModalExit\\ModalExit.js":"17","C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\ModalAddPost\\ModalAddPost.js":"18","C:\\Users\\asda_\\Desktop\\react-test\\src\\functions.js":"19","C:\\Users\\asda_\\Desktop\\react-test\\src\\pages\\PostDetail\\PostDetail.js":"20"},{"size":501,"mtime":1608493953735,"results":"21","hashOfConfig":"22"},{"size":825,"mtime":1610308837507,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":2754,"mtime":1610218500053,"results":"25","hashOfConfig":"22"},{"size":483,"mtime":1608496568918,"results":"26","hashOfConfig":"22"},{"size":553,"mtime":1610305375073,"results":"27","hashOfConfig":"22"},{"size":2182,"mtime":1610219243059,"results":"28","hashOfConfig":"22"},{"size":1574,"mtime":1610309866059,"results":"29","hashOfConfig":"22"},{"size":401,"mtime":1608484864415,"results":"30","hashOfConfig":"22"},{"size":2662,"mtime":1610304269772,"results":"31","hashOfConfig":"22"},{"size":297,"mtime":1607285522873,"results":"32","hashOfConfig":"22"},{"size":542,"mtime":1610302487792,"results":"33","hashOfConfig":"22"},{"size":1260,"mtime":1610302831091,"results":"34","hashOfConfig":"22"},{"size":387,"mtime":1608493651152,"results":"35","hashOfConfig":"22"},{"size":1417,"mtime":1609967011766,"results":"36","hashOfConfig":"22"},{"size":353,"mtime":1608494087716,"results":"37","hashOfConfig":"22"},{"size":1293,"mtime":1610218248845,"results":"38","hashOfConfig":"22"},{"size":3540,"mtime":1610214359426,"results":"39","hashOfConfig":"22"},{"size":325,"mtime":1610218034704,"results":"40","hashOfConfig":"22"},{"size":1184,"mtime":1610221818869,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"7whzjb",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},"C:\\Users\\asda_\\Desktop\\react-test\\src\\index.js",[],["86","87"],"C:\\Users\\asda_\\Desktop\\react-test\\src\\App.js",["88"],"C:\\Users\\asda_\\Desktop\\react-test\\src\\reportWebVitals.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\Header\\Header.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\EditBtn\\EditBtn.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\PostList\\PostList.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\PostItem\\PostItem.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\Pagination\\Pagination.js",["89"],"C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\store.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\reducer\\editReducer.js",["90","91"],"C:\\Users\\asda_\\Desktop\\react-test\\src\\api\\api.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\actions\\types.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\redux\\actions\\actions.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\Loader\\Loader.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\pages\\EditPage.js",["92"],"import React, {useEffect, useState} from 'react';\r\nimport PostList from \"../components/PostList/PostList\";\r\nimport Pagination from \"../components/Pagination/Pagination\";\r\n\r\nimport styles from \"../components/EditPage/EditPage.module.scss\";\r\nimport {setEditMode, setModalPostAdd} from \"../redux/actions/actions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport ModalExit from \"../components/ModalExit/ModalExit\";\r\nimport ModalAddPost from \"../components/ModalAddPost/ModalAddPost\";\r\n\r\nconsole.log(styles);\r\n\r\nconst EditPage = ({match}) => {\r\n  //state\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (match.path === '/edit-page') {\r\n      dispatch(setEditMode())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.btnWrapper}>\r\n        <button\r\n          className=\"add-post edit-btn\"\r\n          onClick={() => dispatch(setModalPostAdd(true))}\r\n        >\r\n          Добавить статью\r\n        </button>\r\n\r\n        <button\r\n          className=\"exit-post edit-btn\"\r\n          onClick={() => setIsOpenModal(true)}\r\n        >\r\n          Выйти из редактирования\r\n        </button>\r\n      </div>\r\n\r\n\r\n      <PostList/>\r\n      <Pagination/>\r\n\r\n      <ModalExit isOpenModal={isOpenModal} setIsOpenModal={setIsOpenModal}/>\r\n      <ModalAddPost/>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPage;","C:\\Users\\asda_\\Desktop\\react-test\\src\\pages\\MainPage.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\ModalExit\\ModalExit.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\components\\ModalAddPost\\ModalAddPost.js",["93"],"import React, {useEffect} from 'react';\r\n\r\n\r\nimport style from \"./ModalAddPost.module.scss\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addPost, editPost, setIsEditPost, setModalPostAdd} from \"../../redux/actions/actions\";\r\n\r\nconst ModalAddPost = () => {\r\n  //redux\r\n  const dispatch = useDispatch();\r\n  const isOpenModal = useSelector(state => state.editReducer.isModalAddPost);\r\n  const isEditPost = useSelector(state => state.editReducer.isEditPost);\r\n  const editPostItem = useSelector(state => state.editReducer.editPost);\r\n\r\n  const {register, handleSubmit, reset, errors, setValue} = useForm({\r\n    defaultValues: {\r\n      title: '',\r\n      imgLink: '',\r\n      text: '',\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isOpenModal) {\r\n      document.body.style.overflow = 'hidden';\r\n      window.scrollTo({\r\n        top: 0,\r\n        behavior: \"smooth\",\r\n      })\r\n    } else {\r\n      document.body.style.overflow = '';\r\n    }\r\n  }, [isOpenModal]);\r\n\r\n  useEffect(() => {\r\n    if (isEditPost) {\r\n      console.log(editPostItem.id);\r\n      setValue('title', editPostItem.title);\r\n      setValue('imgLink', editPostItem.imgLink);\r\n      setValue('text', editPostItem.text);\r\n    } else reset();\r\n  }, [editPostItem, isEditPost]);\r\n\r\n\r\n  const onSubmit = data => {\r\n    if (isEditPost) {\r\n      dispatch(editPost(editPostItem.id, data));\r\n      dispatch(setIsEditPost(false));\r\n    } else {\r\n      dispatch(addPost(data));\r\n    }\r\n    console.log(data);\r\n    reset();\r\n  }\r\n\r\n  return (\r\n    <div className={`${style.modal} ${isOpenModal ? style.active : ''}`}>\r\n      <Link to=\"/\" className={style.title}>Blog</Link>\r\n      <form\r\n        className={style.form}\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <div className={style.btns}>\r\n          <button\r\n            type=\"button\"\r\n            className={`${style.btn} ${style.btnBack}`}\r\n            onClick={() => {\r\n              dispatch(setModalPostAdd(false));\r\n              dispatch(setIsEditPost(false));\r\n\r\n            }}\r\n          />\r\n          {\r\n            isEditPost ? (\r\n              <button\r\n                type=\"submit\"\r\n                className={style.btn}\r\n                onClick={() => dispatch(setModalPostAdd(false))}\r\n              >Изменить\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"submit\"\r\n                className={style.btn}\r\n                onClick={() => dispatch(setModalPostAdd(false))}\r\n              >Опубликовать\r\n              </button>\r\n            )\r\n          }\r\n\r\n        </div>\r\n\r\n        <input\r\n          type=\"text\"\r\n          className={`${style.inputTitle} ${errors.title?.type === 'required' ? style.error : ''}`}\r\n          placeholder=\"Заголовок\"\r\n          name=\"title\"\r\n          ref={register({required: true})}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className={`${style.inputTitle} ${errors.imgLink?.type === 'required' ? style.error : ''}`}\r\n          placeholder=\"Ссылка на картинку\"\r\n          name=\"imgLink\"\r\n          ref={register({required: true})}\r\n        />\r\n        <textarea\r\n          className={`${style.inputText} ${errors.text?.type === 'required' ? style.error : ''}`}\r\n          placeholder=\"Основной текст .....\"\r\n          name=\"text\"\r\n          ref={register({required: true})}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalAddPost;","C:\\Users\\asda_\\Desktop\\react-test\\src\\functions.js",[],"C:\\Users\\asda_\\Desktop\\react-test\\src\\pages\\PostDetail\\PostDetail.js",["94"],"import React, {useEffect, useRef} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setDetailPost} from \"../../redux/actions/actions\";\r\nimport style from \"./PostDetail.module.scss\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {replaceEmptyImg} from \"../../functions\";\r\n\r\nconst PostDetail = ({match}) => {\r\n  const dispatch = useDispatch();\r\n  const dataPostItem = useSelector(state => state.editReducer.postDetailItem);\r\n  const posts = useSelector(state => state.editReducer.posts);\r\n  const imgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (posts.length) {\r\n      dispatch(setDetailPost(+match.params.postId));\r\n    }\r\n  }, [posts]);\r\n\r\n  return (\r\n    <div className={style.post}>\r\n      <Link to={'/'} className={style.back}/>\r\n      <h3 className={style.title}>{dataPostItem.title}</h3>\r\n      <div className={style.date}>{dataPostItem.date}</div>\r\n      <img\r\n        ref={imgRef}\r\n        src={dataPostItem.imgLink}\r\n        alt=\"\"\r\n        className={style.image}\r\n        onError={() => replaceEmptyImg(imgRef.current)}\r\n      />\r\n      <p className={style.text}>{dataPostItem.text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetail;",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":17,"column":6,"nodeType":"101","endLine":17,"endColumn":8,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"100","line":17,"column":6,"nodeType":"101","endLine":17,"endColumn":26,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":72,"column":41,"nodeType":"106","messageId":"107","endLine":72,"endColumn":43},{"ruleId":"104","severity":1,"message":"105","line":110,"column":47,"nodeType":"106","messageId":"107","endLine":110,"endColumn":49},{"ruleId":"99","severity":1,"message":"108","line":24,"column":6,"nodeType":"101","endLine":24,"endColumn":8,"suggestions":"109"},{"ruleId":"99","severity":1,"message":"110","line":44,"column":6,"nodeType":"101","endLine":44,"endColumn":32,"suggestions":"111"},{"ruleId":"99","severity":1,"message":"112","line":18,"column":6,"nodeType":"101","endLine":18,"endColumn":13,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["116"],["117"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'dispatch' and 'match.path'. Either include them or remove the dependency array.",["118"],"React Hook useEffect has missing dependencies: 'reset' and 'setValue'. Either include them or remove the dependency array.",["119"],"React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.postId'. Either include them or remove the dependency array.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [dispatch]",{"range":"131","text":"132"},"Update the dependencies array to be: [posts, currentPage, dispatch]",{"range":"133","text":"134"},"Update the dependencies array to be: [dispatch, match.path]",{"range":"135","text":"136"},"Update the dependencies array to be: [editPostItem, isEditPost, reset, setValue]",{"range":"137","text":"138"},"Update the dependencies array to be: [dispatch, match.params.postId, posts]",{"range":"139","text":"140"},[484,486],"[dispatch]",[557,577],"[posts, currentPage, dispatch]",[756,758],"[dispatch, match.path]",[1306,1332],"[editPostItem, isEditPost, reset, setValue]",[663,670],"[dispatch, match.params.postId, posts]"]